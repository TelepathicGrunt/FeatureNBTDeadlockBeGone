buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
		classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.2.1'
	}
}

plugins {
	id "net.darkhax.curseforgegradle" version "1.0.7"
	id 'org.quiltmc.loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = "${project.modid}_quilt"
group = project.maven_group

repositories {}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings( loom.layered {
		addLayer quiltMappings.mappings( "org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:v2" )
		addLayer officialMojangMappings()
	})
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "org.quiltmc:qsl:${project.qsl_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.quilted_fapi_version}-${project.minecraft_version}"
}

apply from: 'gradle/processresources.gradle'

tasks.withType(JavaCompile).configureEach {
	it.sourceCompatibility = 17
	it.options.encoding = 'UTF-8'
	it.options.release.set(17)
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_$archivesBaseName"}
	}
}

apply from: 'gradle/maven.gradle'
apply from: 'gradle/modrinth.gradle'
task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = "$System.env.CURSEFORGEKEY"
	int projectId = 560323
	String changelogText = new File("CHANGELOG.md").getText('UTF-8')

	def mainFile = upload(projectId, remapJar)
	disableVersionDetection()
	mainFile.addGameVersion("1.19-Snapshot")

	mainFile.changelog = changelogText
	mainFile.changelogType = "markdown"
	mainFile.releaseType = "release"
	mainFile.displayName = "Feature NBT Deadlock Be Gone v${project.mod_version} (${project.minecraft_version} MC)"
}

task buildAndRelease{}
tasks.publish.mustRunAfter tasks.build
tasks.publishCurseForge.mustRunAfter tasks.publish
tasks.publishModrinth.mustRunAfter tasks.publish
tasks.publishCurseForge.dependsOn("remapJar")
tasks.buildAndRelease.dependsOn(tasks.build, tasks.publish, tasks.publishCurseForge, tasks.publishModrinth)